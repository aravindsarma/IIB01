

CREATE COMPUTE MODULE TestFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refTran REFERENCE TO InputRoot.XMLNSC.refEnvBen.*:transactions.*:transaction;
		CREATE FIELD OutputRoot.XMLNSC.DETAIL;
		DECLARE refDetail REFERENCE TO OutputRoot.XMLNSC.DETAIL;
		SET refDetail.FILLER_200 = '';
		IF (refTran.*:transmissionTypeNm = 'Request') THEN
			SET refDetail.TRANSMISSION_TYPE = 'DQ';
		ELSE
			SET refDetail.TRANSMISSION_TYPE = 'DR';
		END IF;
		SET refDetail.REQUEST_CODE = '01';
		SET refDetail.SENDER_ID = 'HN1';
		SET refDetail.RECEIVER_ID ='MHS';
		SET refDetail.RESEND_COUNTER='0000';
		SET refDetail.RESPONSE_CODE='00';
		--
		--
		SET refDetail.PARTNER_PATIENT_ID='';
		---------------------------------------------------------------------------------------------------------------------------------
		-- Temp variables used by all SOS Accounts
		---------------------------------------------------------------------------------------------------------------------------------
		DECLARE deductibleAdjustAmt DECIMAL 0.0;
		DECLARE totalOOPAdjustAmt DECIMAL 0.0;
		DECLARE shadowDeductibleAdjustAmt DECIMAL 0.0;
		DECLARE shadowTotalOOPAdjustAmt DECIMAL 0.0;
		SET deductibleAdjustAmt = CAST(refTran.*:deductibleAdjustAmt AS DECIMAL DEFAULT 0.0);
		SET totalOOPAdjustAmt = CAST(refTran.*:totalOOPAdjustAmt AS DECIMAL DEFAULT 0.0);
		SET shadowDeductibleAdjustAmt = CAST(refTran.*:shadowDeductibleAdjustAmt AS DECIMAL DEFAULT 0.0);
		SET shadowTotalOOPAdjustAmt = CAST(refTran.*:shadowTotalOOPAdjustAmt AS DECIMAL DEFAULT 0.0);
		---------------------------------------------------------------------------------------------------------------------------------
		-- Normal claim	01	
		IF (deductibleAdjustAmt = 0.0 OR 
				totalOOPAdjustAmt = 0.0) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='01';	
		END IF;
		---------------------------------------------------------------------------------------------------------------------------------
		-- Normal claim	02
		IF (deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt <> 0) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='02';	
		END IF;
		-- Normal claim 02 AND shadow claim 01
		IF (refDetail.SOS_NUMBER_OF_ITEMS = 02 AND
			(shadowDeductibleAdjustAmt <> 0.0 OR 
				shadowTotalOOPAdjustAmt <> 0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='03';	
		END IF;
		-- Normal claim	02 AND shadow claim 02
		IF (refDetail.SOS_NUMBER_OF_ITEMS = 03 AND 
			(shadowDeductibleAdjustAmt <> 0.0 AND 
				shadowTotalOOPAdjustAmt <> 0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='04';	
		END IF;
		---------------------------------------------------------------------------------------------------------------------------------
		-- Normal claim 01 AND shadow claim 01 
		IF (refDetail.SOS_NUMBER_OF_ITEMS = 01 AND 
			(shadowDeductibleAdjustAmt <> 0.0 OR 
				shadowTotalOOPAdjustAmt <> 0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='02';	
		END IF;
		-- Normal claim	01 AND shadow claim 02
		IF (refDetail.SOS_NUMBER_OF_ITEMS = 02 AND 
			(shadowDeductibleAdjustAmt <> 0.0 AND 
				shadowTotalOOPAdjustAmt <> 0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='03';	
		END IF;
		---------------------------------------------------------------------------------------------------------------------------------
		-- Normal claim 00
		IF (deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt = 0.0) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='';	
		END IF;
		-- Normal claim 00 AND shadow claim 01
		IF (refDetail.SOS_NUMBER_OF_ITEMS='' AND
			(shadowDeductibleAdjustAmt = 0.0 OR 
				shadowTotalOOPAdjustAmt = 0.0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='01';
		END IF;
		-- Normal claim 00 AND shadow claim 00
		IF (deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
			shadowDeductibleAdjustAmt = 0.0 AND 
				shadowTotalOOPAdjustAmt = 0.0) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='';	
		END IF;
		-- Normal claim 00 AND shadow claim 02
		IF (refDetail.SOS_NUMBER_OF_ITEMS='' AND
			(shadowDeductibleAdjustAmt <> 0.0 AND 
				shadowTotalOOPAdjustAmt <> 0)) THEN
			SET refDetail.SOS_NUMBER_OF_ITEMS='02';
		END IF;
		---------------------------------------------------------------------------------------------------------------------------------
		SET refDetail.SOS_PRODUCT_ID ='';
		SET refDetail.FILLER_14='';
		--SET refDetail.SOS_SIGN_BIT_BALANCE='';
		CREATE NEXTSIBLING OF refDetail.FILLER_14 NAME 'SOS_SIGN_BIT_BALANCE';
		DECLARE refSBB REFERENCE TO refDetail.SOS_SIGN_BIT_BALANCE;
--		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		IF (refDetail.SOS_NUMBER_OF_ITEMS IN ('01','02','03','04')) THEN
			SET refSBB ='+';
		END IF;
		CREATE NEXTSIBLING OF refSBB AS refSBB REPEAT;
		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		IF (refDetail.SOS_NUMBER_OF_ITEMS = '02' OR refDetail.SOS_NUMBER_OF_ITEMS = '03' OR refDetail.SOS_NUMBER_OF_ITEMS = '04') THEN
			SET refSBB ='+';
		END IF;
		CREATE NEXTSIBLING OF refSBB AS refSBB REPEAT;
		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		IF (refDetail.SOS_NUMBER_OF_ITEMS = '03' OR refDetail.SOS_NUMBER_OF_ITEMS = '04') THEN
			SET refSBB ='+';
		END IF;
		CREATE NEXTSIBLING OF refSBB AS refSBB REPEAT;
		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		IF (refDetail.SOS_NUMBER_OF_ITEMS = '04') THEN
			SET refSBB ='+';
		END IF;
		CREATE NEXTSIBLING OF refSBB AS refSBB REPEAT;
		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		CREATE NEXTSIBLING OF refSBB AS refSBB REPEAT;
		MOVE refSBB NEXTSIBLING REPEAT TYPE NAME;
		SET refSBB ='';
		---------------------------------------------------------------------------------------------------------------------------------
		-- Temp variables used by all SOS Accounts
		---------------------------------------------------------------------------------------------------------------------------------
		DECLARE deductibleAdjustAmt100 DECIMAL 0.0;
		DECLARE totalOOPAdjustAmt100 DECIMAL 0.0;
		DECLARE shadowDeductibleAdjustAmt100 DECIMAL 0.0;
		DECLARE shadowTotalOOPAdjustAmt100 DECIMAL 0.0;
		SET deductibleAdjustAmt100 = deductibleAdjustAmt * 100;
		SET totalOOPAdjustAmt100 = totalOOPAdjustAmt * 100;
		SET shadowDeductibleAdjustAmt100 = shadowDeductibleAdjustAmt * 100;
		SET shadowTotalOOPAdjustAmt100 = shadowTotalOOPAdjustAmt * 100;
		---------------------------------------------------------------------------------------------------------------------------------
		--------------SOS Account1-----------------
		CREATE FIELD refDetail.SOS_ACCOUNT;
		DECLARE refAccount REFERENCE TO refDetail.SOS_ACCOUNT;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account1';-- DO NOT INCLUDE IN ORIGINAL
		-- TYPE_OF_BENEFIT_ACCOUNT
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';	
		IF (deductibleAdjustAmt <> 0.0) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='04';
		END IF;
		IF (deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt <> 0.0) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='05';
		END IF;
		IF (deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='24';
		END IF;
		IF (deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
					shadowDeductibleAdjustAmt = 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0)THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='25';	
		END IF;
		-- PARTICIPATION_TYPE
		SET refAccount.PARTICIPATION_TYPE='';
		IF (LENGTH(refAccount.TYPE_OF_BENEFIT_ACCOUNT) <> 0) THEN
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		IF refTran.*:additionalData.*:DeductibleAccount IN ('001','000','0') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:additionalData.*:DeductibleAccount IN ('008') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '2';
		ELSEIF refTran.*:networkInd IN ('INN','INP') THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue='28'  THEN
			SET refAccount.PARTICIPATION_TYPE='2';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue<>'28' THEN
			SET refAccount.PARTICIPATION_TYPE='1';
		ELSE
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		-- CURRENT_AMOUNT -- CR_DB_INDICATOR
		SET refAccount.CURRENT_AMOUNT= 0;
		SET refAccount.CR_DB_INDICATOR='';
		IF (deductibleAdjustAmt100 <> 0.0 ) THEN
			IF (deductibleAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = deductibleAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (deductibleAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = deductibleAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;			
		ELSEIF totalOOPAdjustAmt100 <> 0.0 THEN
			IF (totalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = totalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (totalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = totalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;
		ELSEIF shadowDeductibleAdjustAmt100 <> 0.0 THEN
			IF (shadowDeductibleAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowDeductibleAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;
		ELSEIF shadowTotalOOPAdjustAmt100 <> 0.0 THEN
			IF (shadowTotalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowTotalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;	
		END IF;
		-- ACCUMULATED_AMOUNT -- REMAINING_AMOUNT
		IF refAccount.CURRENT_AMOUNT <> 0 THEN
			SET refAccount.ACCUMULATED_AMOUNT = '0000000000';
			SET refAccount.REMAINING_AMOUNT = '0000000000';
		ELSE
			SET refAccount.ACCUMULATED_AMOUNT='';
			SET refAccount.REMAINING_AMOUNT='';
		END IF;
		--------------SOS Account2-----------------
		CREATE NEXTSIBLING OF refAccount AS refAccount REPEAT;
		MOVE refAccount NEXTSIBLING REPEAT TYPE NAME;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account2';-- DO NOT INCLUDE IN ORIGINAL
		-- TYPE_OF_BENEFIT_ACCOUNT
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';
		IF (deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt <> 0.0) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='05';
		END IF;
		IF ((deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0) OR 
			(deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0)) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='24';
		END IF;
		IF ((deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
					shadowDeductibleAdjustAmt = 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0)OR
			(deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt = 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0) OR 
			(deductibleAdjustAmt = 0.0 AND 
					totalOOPAdjustAmt = 0.0 AND
						shadowDeductibleAdjustAmt <> 0.0 AND
							shadowTotalOOPAdjustAmt <> 0.0))THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='25';	
		END IF;
		-- PARTICIPATION_TYPE
		SET refAccount.PARTICIPATION_TYPE='';
		IF (LENGTH(refAccount.TYPE_OF_BENEFIT_ACCOUNT) <> 0) THEN
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		IF refTran.*:additionalData.*:DeductibleAccount IN ('001','000','0') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:additionalData.*:DeductibleAccount IN ('008') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '2';
		ELSEIF refTran.*:networkInd IN ('INN','INP') THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue='28'  THEN
			SET refAccount.PARTICIPATION_TYPE='2';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue<>'28' THEN
			SET refAccount.PARTICIPATION_TYPE='1';
		ELSE
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		-- CURRENT_AMOUNT -- CR_DB_INDICATOR
		SET refAccount.CURRENT_AMOUNT= 0;
		SET refAccount.CR_DB_INDICATOR='';
		IF (deductibleAdjustAmt100 <> 0.0 AND totalOOPAdjustAmt100 <> 0.0) THEN			
			IF (totalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = totalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (totalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = totalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;
		ELSEIF shadowDeductibleAdjustAmt100 <> 0.0 THEN
			IF (shadowDeductibleAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowDeductibleAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;
		ELSEIF shadowTotalOOPAdjustAmt100 <> 0.0 THEN
			IF (shadowTotalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowTotalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;	
		END IF;	
		-- ACCUMULATED_AMOUNT -- REMAINING_AMOUNT
		IF refAccount.CURRENT_AMOUNT <> 0 THEN
			SET refAccount.ACCUMULATED_AMOUNT = '0000000000';
			SET refAccount.REMAINING_AMOUNT = '0000000000';
		ELSE
			SET refAccount.ACCUMULATED_AMOUNT='';
			SET refAccount.REMAINING_AMOUNT='';
		END IF;
		--------------SOS Account3-----------------
		CREATE NEXTSIBLING OF refAccount AS refAccount REPEAT;
		MOVE refAccount NEXTSIBLING REPEAT TYPE NAME;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account3';-- DO NOT INCLUDE IN ORIGINAL
		-- TYPE_OF_BENEFIT_ACCOUNT
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';
		IF (deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0) THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='24';
		END IF;
		IF ((deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt = 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0) OR
			(deductibleAdjustAmt = 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0) OR 
			(deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt = 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0))THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='25';	
		END IF;
		-- PARTICIPATION_TYPE
		SET refAccount.PARTICIPATION_TYPE='';
		IF (LENGTH(refAccount.TYPE_OF_BENEFIT_ACCOUNT) <> 0) THEN
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		IF refTran.*:additionalData.*:DeductibleAccount IN ('001','000','0') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:additionalData.*:DeductibleAccount IN ('008') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '2';
		ELSEIF refTran.*:networkInd IN ('INN','INP') THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue='28'  THEN
			SET refAccount.PARTICIPATION_TYPE='2';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue<>'28' THEN
			SET refAccount.PARTICIPATION_TYPE='1';
		ELSE
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		-- CURRENT_AMOUNT -- CR_DB_INDICATOR
		SET refAccount.CURRENT_AMOUNT= 0;
		SET refAccount.CR_DB_INDICATOR='';
		IF (deductibleAdjustAmt100 <> 0.0 AND totalOOPAdjustAmt100 <> 0.0 AND shadowDeductibleAdjustAmt100 <> 0.0) THEN			
			IF (shadowDeductibleAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowDeductibleAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowDeductibleAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;
		ELSEIF shadowTotalOOPAdjustAmt100 <> 0.0 THEN
			IF (shadowTotalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowTotalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;	
		END IF;	
		-- ACCUMULATED_AMOUNT -- REMAINING_AMOUNT
		IF refAccount.CURRENT_AMOUNT <> 0 THEN
			SET refAccount.ACCUMULATED_AMOUNT = '0000000000';
			SET refAccount.REMAINING_AMOUNT = '0000000000';
		ELSE
			SET refAccount.ACCUMULATED_AMOUNT='';
			SET refAccount.REMAINING_AMOUNT='';
		END IF;
		--------------SOS Account4-----------------
		CREATE NEXTSIBLING OF refAccount AS refAccount REPEAT;
		MOVE refAccount NEXTSIBLING REPEAT TYPE NAME;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account4';-- DO NOT INCLUDE IN ORIGINAL
		-- TYPE_OF_BENEFIT_ACCOUNT
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';
		IF (deductibleAdjustAmt <> 0.0 AND 
				totalOOPAdjustAmt <> 0.0 AND
					shadowDeductibleAdjustAmt <> 0.0 AND
						shadowTotalOOPAdjustAmt <> 0.0)THEN
			SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='25';	
		END IF;
		-- PARTICIPATION_TYPE
		SET refAccount.PARTICIPATION_TYPE='';
		IF (LENGTH(refAccount.TYPE_OF_BENEFIT_ACCOUNT) <> 0) THEN
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		IF refTran.*:additionalData.*:DeductibleAccount IN ('001','000','0') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:additionalData.*:DeductibleAccount IN ('008') AND refTran.*:additionalData.*:accumulatorValue IN ('33','34','36','37')  THEN
			SET refAccount.PARTICIPATION_TYPE= '2';
		ELSEIF refTran.*:networkInd IN ('INN','INP') THEN
			SET refAccount.PARTICIPATION_TYPE= '1';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue='28'  THEN
			SET refAccount.PARTICIPATION_TYPE='2';
		ELSEIF refTran.*:networkInd='OON' AND refTran.*:additionalData.*:accumulatorValue<>'28' THEN
			SET refAccount.PARTICIPATION_TYPE='1';
		ELSE
			SET refAccount.PARTICIPATION_TYPE='0';
		END IF;
		-- CURRENT_AMOUNT -- CR_DB_INDICATOR
		SET refAccount.CURRENT_AMOUNT= 0;
		SET refAccount.CR_DB_INDICATOR='';
		IF (deductibleAdjustAmt100 <> 0.0 AND totalOOPAdjustAmt100 <> 0.0 AND shadowDeductibleAdjustAmt100 <> 0.0 AND shadowTotalOOPAdjustAmt100 <> 0.0) THEN			
			IF (shadowTotalOOPAdjustAmt100 < 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100 * -1.0;
				SET refAccount.CR_DB_INDICATOR='-';
			ELSEIF (shadowTotalOOPAdjustAmt100 > 0.0) THEN
				SET refAccount.CURRENT_AMOUNT = shadowTotalOOPAdjustAmt100;
				SET refAccount.CR_DB_INDICATOR='+';
			END IF;	
		END IF;	
		-- ACCUMULATED_AMOUNT -- REMAINING_AMOUNT
		IF refAccount.CURRENT_AMOUNT <> 0 THEN
			SET refAccount.ACCUMULATED_AMOUNT = '0000000000';
			SET refAccount.REMAINING_AMOUNT = '0000000000';
		ELSE
			SET refAccount.ACCUMULATED_AMOUNT='';
			SET refAccount.REMAINING_AMOUNT='';
		END IF;
		--------------SOS Account5-----------------
		CREATE NEXTSIBLING OF refAccount AS refAccount REPEAT;
		MOVE refAccount NEXTSIBLING REPEAT TYPE NAME;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account5';-- DO NOT INCLUDE IN ORIGINAL
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';		
		SET refAccount.PARTICIPATION_TYPE='';
		SET refAccount.CURRENT_AMOUNT='';
		SET refAccount.CR_DB_INDICATOR='';
		SET refAccount.ACCUMULATED_AMOUNT='';
		SET refAccount.REMAINING_AMOUNT='';
		--------------SOS Account6-----------------
		CREATE NEXTSIBLING OF refAccount AS refAccount REPEAT;
		MOVE refAccount NEXTSIBLING REPEAT TYPE NAME;
		SET refAccount.TYPE_OF_ACCOUNT ='SOS Account6'; -- DO NOT INCLUDE IN ORIGINAL
		SET refAccount.TYPE_OF_BENEFIT_ACCOUNT ='';		
		SET refAccount.PARTICIPATION_TYPE='';
		SET refAccount.CURRENT_AMOUNT='';
		SET refAccount.CR_DB_INDICATOR='';
		SET refAccount.ACCUMULATED_AMOUNT='';
		SET refAccount.REMAINING_AMOUNT='';
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
